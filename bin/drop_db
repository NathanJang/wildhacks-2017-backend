#!/usr/bin/env node
'use strict';

const async = require('async');
const config = require('config');
const yargs = require('yargs');
const argv = yargs
                .default({ all: false })
                .usage('Usage:\n> $0 --all // Deletes all databases specified in sequelize.json\n\
> $0 <database1> <database2> ... // Deletes specific databases')
                .help('help')
                .argv;
const createDbConnection = require('./connect_db');
const configExists = require('./utils').configExists;
var connection = createDbConnection(config.get('db'));

if (argv.all) {
    if (configExists()) {
        const databases = require('../config/sequelize.json');
        
        async.forEachOf(databases, 
            function(environment, key, done) {
                var databaseName = (typeof environment.database == 'string') ? 
                                        environment.database : 
                                        key;
                var drop = `DROP DATABASE IF EXISTS ${databaseName}`;

                connection.query(
                    drop,
                    function(err, results, fields) {
                        if (err == null) {
                            var status = '> ';

                            if (parseInt(results.warningStatus) <= 0) {
                                status += `${databaseName} deleted. ${results.affectedRows} row(s) affected.`;
                            } else {
                                status += `${databaseName} does not exist.`;
                            }

                            console.log(status);
                            done();
                        } else {
                            throw new Error(err);
                        }
                    }
                );
            },
            function(err) {
                if (err) throw new Error(err);
                console.log('> Done. Closing connection...\n');
                connection.end();
            }
        );
    }
} else {
    var databases = argv._;

    if (databases.length < 1) {
        yargs.showHelp();
        process.exit(0);
    }

    async.forEach(databases,
        function(databaseName, done) {
            var drop = `DROP DATABASE IF EXISTS ${databaseName}`;

            connection.query(
                drop,
                function(err, results, fields) {
                     if (err == null) {
                        var status = '> ';

                        if (parseInt(results.warningStatus) <= 0) {
                            status += `${databaseName} created. ${results.affectedRows} row(s) affected.`;
                        } else {
                            status += `${databaseName} does not exist.`;
                        }

                        console.log(status);
                        done();
                    } else {
                        throw new Error(err);
                    }
                }
            )
        },
        function(err) {
            if (err) throw new Error(err);
            console.log('> Done. Closing connection...\n');
            connection.end();
        }
    );
}